[{"title":"Setting Up Hexo","url":"/2021/01/16/Setting-Up-Hexo/","content":"Requirement\nGIt\nNode.js\n\n\nFor more: https://hexo.io/docs/\n\nSetupNew directory \nmkdir &lt;your_blog_name&gt;\nInit hexo\nhexo init &lt;your_blog_name&gt;\nConfigurationIn _config.yml\n\nMy personal setting\n\ntitle: Sungwa&#x27;s Blog...author: Sungwa Yu...timezone: &#x27;PST&#x27;...url: https://sungwayu.github.io/...new_post_name: :year-:month-:day-:title.md...render_drafts: true        # Enable draft feature...post_asset_folder: true...relative_link: false...highlight:\t...  auto_detect: true\t...date_format: MM-DD-YYYY...theme: keep...deploy:  type: git  repo: https://github.com/SungwaYu/SungwaYu.github.io.git  branch: master...search:  path: search.json  field: post  content: true  format: striptags\n\n\nInstall Theme\nThe theme I am using: https://xpoet.cn/\n\nIntall$ cd &lt;hexo-site&gt;$ git clone --depth=1 https://github.com/XPoet/hexo-theme-keep themes/keep\nEnable the themeEdit _config.yml\ntheme: keep\nTheme Configuration\nhttps://keep.xpoet.cn/2020/11/Keep-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/\n\nEdit themes/keep/_config.yml\n\nAdded my own avatar and favicon at /images/&lt;filename&gt;\n\nAdded my own background_img at /images/&lt;filename&gt;\n\nMenu: Create manually. I added Categories and About.\n\n\n\nEx. In hexo-site, run hexo new page about, there will be an about directory created in source directory. Then configure the theme _config.yml‘s menu: about. Write content to /source/about/index.md.\n\n\nInstall hero-generator-searchdb to enable search feature. Use command npm install hexo-generator-searchdb in the site’s main directory. \n\nEnable word count feature, run command npm i hexo-wordcount --save \n\n\nMy theme configurationbase_info:  title: Sungwa&#x27;s Blog  author: Sungwa Yu  url: https://sungwayu.github.io/style:  # Theme primary color  primary_color: &#x27;#0066CC&#x27;  # Avatar (You can use local image or image external link)  avatar: /images/avatar.png  # Favicon (You can use local image or image external link)  favicon: /images/logo.png  # Article image align position, value: left | center  article_img_align: left  # Left side width  left_side_width: 260px  # Content area max width  content_max_width: 920px  # Mouse hover  hover:    shadow: true   # shadow effect when the mouse hover    scale: false    # scale effect when the mouse hover  # First screen  first_screen:    enable: true    background_img: /images/bg.svg    description: Welcome to My Blog  # Scroll style settings  scroll:    progress_bar:      enable: true    percent:      enable: truesocial_contact:  enable: true  links:    github: https://github.com/SungwaYu         # your GitHub URL    weixin:          # your WeChat QR-Code URL    qq:              # your QQ QR-Code URL    weibo:           # your WeiBo URL    zhihu:           # your ZhiHu URL    twitter:         # your twitter URL    facebook:        # your facebook URL    email: yusungwa@gmail.com          # your emailmenu:  Home: /  Archives: /archives  Categories: /categories  # Tags: /tags  # Links: /links  About: /about  # Changelog: /changelog  # ......home_article:  category:    enable: true     # show category in home page article block    limit: 3          # max number of categories shown in home page article block  tag:    enable: true     # show tags in home page article block    limit: 5          # max number of tags shown in home page article blockcode_copy:  enable: true  style: mac        # values: default | mactoc:  enable: true  # Automatically add list number to toc.  number: true  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.  expand_all: truecopyright_info:  enable: falsepost_wordcount:  enable: true  wordcount: true  # word count, one article  min2read: true   # time to read, one articlewebsite_count:  # busuanzi  # See: http://ibruce.info/2015/04/04/busuanzi/  busuanzi_count:    enable: true    site_uv: false    site_pv: false    page_pv: truelocal_search:  enable: true  trigger: autocomment:  # Valine  # See: https://github.com/xCss/Valine  valine:    enable: false    appid:                # your leancloud application appid    appkey:               # your leancloud application appkey    placeholder:          # your placeholder  # Gitalk  # See: https://github.com/gitalk/gitalk  gitalk:    enable: false    github_id:             # GitHub repo owner    repository:            # Repository name to store issues    client_id:             # GitHub Application Client ID    client_secret:         # GitHub Application Client Secret  # Twikoo  # See: https://github.com/imaegoo/twikoo  twikoo:    enable: false    env_id:                # Tencent Cloud environment id    region:                # environment region. If select Guangzhou, fill in &quot;ap-guangzhou&quot;.rss:  enable: falselazyload:  enable: falsecdn:  enable: falsepjax:  enable: falsefooter:  since: 2020# Keep version (Please don&#x27;t modify)version: 3.3.0\n\n\nPublish\nNew post: hexo new &lt;title&gt;\nNew draft: hexo new draft &lt;title&gt;. When the draft ready, run hexo publish &lt;title&gt; to publish.\nEx. hexo new &quot;Hello World&quot;.\nDelete post/draft: Simply go to _post or draft folder and delete the .md file (and the the its asset folder). \nIf has the asset folder, the image path is just (name.png), don’t need anything at the beginning.\n\nDeploy to GitHub PagesInstall Plug-in$ npm install hexo-deployer-git --save$ npm install hexo-server --save\nConfigure Git$ git config --global user.name &quot;Your_user_name&quot;$ git config --global user.email &quot;Your_email@example.com&quot;\n_config.yml Filedeploy:  type: git   repo: &lt;repository url&gt;   branch: master   message: # If empty, default publish time\nLocal Testinghexo server\nDeploy$ hexo clean &amp;&amp; hexo d -g\n\n\nLayoutEdit Layout\nAdd front-matter to layout\n\nEdit /scaffolds/post.md to\ntitle: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;categories:tags:\nEdit /scaffolds/draft.md to\ntitle: &#123;&#123; title &#125;&#125;categories:tags:\n\nWhen publish from draft to post, it will automatically add date and updated front-matter.\n\nUsageExample: \n\nIn articles.\n\ncategories:- Sports- Baseballtags:- Injury- Fight- Shocking\ncategories:- [Sports, Baseball]- [MLB, American League, Boston Red Sox]- [MLB, American League, New York Yankees]- Rivalries\n\n\nDomain\nPut the domain to repository setting. \n\nUse Github template from the domain provider (setup on the domain provider).\n\n\n","categories":["Note","Hexo"],"tags":["Hexo"]},{"title":"Hexo Theme Personal Settings","url":"/2021/01/21/Hexo-Theme-Personal-Settings/","content":"ObjectiveChange\n\nto\n\nAdding Update Date\nGo to blowser and use the “inspect” feature to locate the &lt;div&gt;.\nFind it in the theme folder.\nFor my theme, I found the date infomation in themes/keep/layout/_partial/article-meta-info.ejs.\n\nChange\n\nto\n\n\n\nAdded a new &lt;span&gt;\n\nFormatted the date\n\nused the updated front-matter value as the update date\n\nAdded words “Published” and “Modified”\n\n\n\nRemove the “Lv1” IconStep same as above.\nI found the icon located at themes/keep/layout/article-content.ejs.\nDelete\n\n","categories":["Note","Hexo"],"tags":["Hexo"]},{"title":"Make the Site Visible on Google","url":"/2021/01/29/Make-the-Site-Visible-on-Google/","content":"Make the Site Visible on Google\nGo to google search console.\n\nChoose the “Domain” option. Enter the www.yourdomain.com and click continue.\n\nCopy the “TXT record”, go to domain DNS provider. Add new TXT resource record.\n\nFor Namesilo, click create TXT resource record, put what you just copied to the TEXT column and leave the hostname column blank.\n\n\nAfter verfiying and being able to enter google search console. Go to blog root directory, run npm install hexo-generator-sitemap --save.\n\nGo to _config.yml and add\n\n\n# Auto generate sitemapsitemap:\tpath: sitemap.xml\n\nWhen Hexo generates the website, there will be a sitemap.xml file in the public directory. Go to google search console, under index-&gt;sitemaps, add the URL (for me https://www.sungwa.com/sitemap.xml). If success, the status will be “Success”. \n\nAfter a while, search site:yusungwa.com in google, it would show the result.\n\n\n\nAside: I also changed both the URL in hexo and theme’s _config.yml to my domain https://yusungwa.com. \n\n","categories":["Note","Hexo"],"tags":["Hexo"]},{"title":"===================  This Site is Just Used to Take Note  ==============","url":"/2021/01/27/This-Site-is-Just-Used-to-Take-Note/","content":""},{"title":"Connect to Virtual Machine and Network Setting","url":"/2021/02/20/Connect-to-Virtual-Machine-and-Network-Setting/","content":"Lookup Host IP AddressCommand: ipconfig getifaddr en0\n\nOr ifconfig and find it after “en0:”\n\nMine is: 10.0.0.3.\nProblems\n\nAfter installed the system image\n\nOS: Mac\n\nVM OS: CentOS7\n\nSoftware: VMware Fusion\n\n\n\nVirtual machine cannot connect to internet and host.\nping www.google.com and ping 10.0.0.3 not working.\nProcedure\nOn the top, chooseVirtual Machine&gt;Network Adapter&gt;Network Adapter Settings...\nChoose Bridged Networking&gt;Wi-Fi\nGo to VM’s terminal, enter dhclient, enter, then type ifconfig, remember the ip address under “ens33”: “inet”. For example, 10.0.0.195.\nIn VM’s terminal, enter vim /etc/sysconfig/network-scripts/ifcfg-ens33, change the file to \n\nTYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=staticDEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=824ec4bd-a9ae-4410-8346-17ce7f3dd111DEVICE=ens33ONBOOT=yesIPADDR=10.0.0.195NETMASK=255.255.255.0GATEWAY=192.168.31.1DNS1=119.29.29.29\nNote: Pay attention to BOOTPROTO=static, ONBOOT=yes, and the last 4 lines. The IPADDR is what we got in step 3.\n\nIn VM’s terminal, systemctl restart network.service\n\nNow, ping www.google.com and ping 10.0.0.3 should work.\n\nIn host’s terminal, ping 10.0.0.195 should work as well.\nMay need to restart the VM to update the ip address shown in the VMWare.\n\nSSH to VM on MacIn host terminal, enter ssh user@ip-addr (usually “user” is “root”). For me, it is ssh root@10.0.0.195. Next, it will ask you to enter the root password. Then enter “yes” if it is the first time. \nEnable Root Login\nsudo vim /etc/ssh/sshd_config\nUncomment #PermitRootLogin no and change it to PermitRootLogin yes\nsudo systemctl restart sshd.service\nIf doesn’t work, change root password using sudo passwd root\n\nFile TransferUse SFTP connection type.\nReferencehttps://mp.weixin.qq.com/s/WeZLtfrMdnISpX3v5WpJfA\n","categories":["Note","Tools"],"tags":["VM","SSH"]},{"title":"Git Related","url":"/2021/03/14/Git-Related/","content":"SettingStop asking for username and password\n\nFind the remote.origin.url using the command: git config -l\nRun the command: git config remote.origin.url https://&#123;YOUR_USER_NAME&#125;:&#123;PASSWORD&#125;@github.com/&#123;YOUR_USER_NAME&#125;/&#123;REPOSITORY_NAME&#125;.git\n\nTagCreate lightweight tag\ngit tag TAGNAME\nex. git tag v1.0, git tag a-bc\n\nFor more: https://git-scm.com/book/en/v2/Git-Basics-Tagging\n\nDelete tag\ngit tag -d TAGNAME\nPush tag\ngit push [origin] --tags\n\nBetter use git push --follow-tags\nReference: https://therightstuff.medium.com/the-rights-and-wrongs-of-git-push-with-tags-998667eaed8f\n\nForce Push Exist repository overwrite\n\nForce push\n\ngit push -f origin master\nStashUsed when you want to go back to the starting point of the commit.\ngit stash\ngit stashgit stash -u   # untracked filesgit stash save &quot;message&quot;   # add message record, will be shown in git stash list\nSave the current change (either before or after git add, after git stash pop, files will be in the stage before git add). Go back to the starting point of the commit, to do something else (branch out). DO NOT edit the fresh commit (after git stash) directly, otherwise may cause conflict. In this case, use git stash show to find the difference and edit them in the “fresh commit”. Then use git stash clear to drop all stashes, or use git stash drop &lt;STASHNAME&gt;. Then use git add and git commit (not git commit -a).\ngit stash list\ngit stash list\nList stash entries and its name.\nGet back to work\ngit stash apply &lt;STASHNAME&gt;git stash pop   # will drop the first stash (0)\n\n\nQuestions\nWorking at branch ‘a’, has not commited (could have done git add .). When create a new branch ‘b’ now, every changes in branch ‘a’ will carry over to the new branch, and after doing a commit in the new branch ‘b’, branch ‘a’ will look like anything unchanged (no git add . too).\n\n","categories":["Note","Tools","Git"],"tags":["Git"]},{"title":"Matlab Basic","url":"/2021/03/14/Matlab-Basic/","content":"Array generationa = linspace(1,11,5);b = 1:2:10;c = zeros(5,6);d = ones(4,3);random_normal_val = randn(5,4); % creates a 5 X 4 matrix with each entry N(0,1);random_uniform_val = rand(5,4); % creates a 5 X 4 matrix with each entry Uniform in (0,1);\nFor loopx = [1:0.1:10];expx = zeros(1,length(x));disp([size(x),size(expx)]);for i = 1:length(x)    expx(i) = exp(-x(i));endfigure(1);plot(x,expx);xlabel(&#x27;x&#x27;);ylabel(&#x27;e^&#123;-x&#125;&#x27;);grid on;\nWhile loopx = [1:0.01:10];logx = zeros(1,length(x));j = 1;while j &lt;= length(x)    logx(j) = log(x(j));    j = j+1;endfigure(2);plot(x,logx);xlabel(&#x27;x&#x27;);ylabel(&#x27;log(x)&#x27;);grid on;\nVectorizationx = [1:0.01:10];expx = exp(x);logx = log(x);figure(3)plot(x,logx);grid on;\nElement wise operationsx = [1:1:10];squarex = x.^2;sumx = x + squarex;disp([x,&#x27;squarex&#x27;,sumx]);mulx = x.*squarex;divx = x./squarex;figure(3)plot(x,divx);\nLogical operationsx = [1:1:10];squarex = x.^2;thresholdx = (x &gt; 5);a = x(x &gt; 5);b = squarex((x&gt;2));squarex(x &lt; 3) = 0;\nHistogram\nhistogram(X,nbins)\n\nx = randn(10000,1); %creates 10000 independent standart normal RVsfigure(1);h2 = histogram(x,50,&#x27;Normalization&#x27;,&#x27;pdf&#x27;);x = rand(10000,1); %creates 10000 independent uniform RVs, each unifrom in (0,1);figure(2);h3 = histogram(x,50,&#x27;Normalization&#x27;,&#x27;pdf&#x27;);% hold on;% h2 = histogram(x,200,&#x27;Normalization&#x27;,&#x27;pdf&#x27;);\nStem plotsfigure(3);y = linspace(0,2*pi,50);stem(sin(y));\nRegular plotsfigure(4);plot(y,cos(y),y,sin(y),&#x27;Linewidth&#x27;,2);xlabel(&#x27;y&#x27;);ylabel(&#x27;F(y)&#x27;);legend(&#x27;cos(y)&#x27;,&#x27;sin(y)&#x27;);grid on;\nSubplotfigure(5);subplot(2,2,1);h2 = histogram(x,50);title(&#x27;Subplot 1: histogram&#x27;);subplot(2,2,2);stem(sin(y));title(&#x27;Subplot 2: sin(y)&#x27;);subplot(2,2,3);plot(y,cos(y),y,sin(y),&#x27;Linewidth&#x27;,2);xlabel(&#x27;y&#x27;);ylabel(&#x27;F(y)&#x27;);legend(&#x27;cos(y)&#x27;,&#x27;sin(y)&#x27;);title(&#x27;Subplot 3: cos(y),sin(y)&#x27;);subplot(2,2,4);stem(exp(y));title(&#x27;Subplot 4: exp(y)&#x27;);\nFunctionsx = [1:2:10];avgx = average(x);X = create_bernouli(0.2,3,4);%function definitions must appear at the end of the filefunction ave = average(x)    ave = sum(x(:))/numel(x);end\nCreate Bernoulifunction X = create_bernouli(p,n,m) % n X m matrix with each element bernouli p    U = rand(n,m);    X = (U &lt;= p);end\n","categories":["Note","Matlab"],"tags":["Matlab"]},{"title":"Shortcuts","url":"/2021/03/14/Shortcuts/","content":"\nNote: ‘*‘ means the setup is conflict with another key\n\nMacMission Control*Move left a space (desktop): Ctrl+2\n*Move right a space (desktop): Ctrl+3\niTerm2split horizontally: cmd+shift+D\nsplit vertically: cmd+D\nselect pane: cmd+opt+arrow\ntype command to multiple terminals at the same time: cmd+shift+i\n\nsame for cancel\n\nCapsloxGlobal*Switch input source: Caps+space\nMovementMove up: Caps+e\nMove down: Caps+d\nMove backward: Caps+s\nMove forward: Caps+f\n*Move backward one word: Caps+w\n*Move forward one word: Caps+r\nMove to the beginning of the line: Caps+p\nMove to the end of the line: Caps+;\nSelectionSelect current word (select backward): Caps+c    select and copy Caps+c then Cmd+c\nDeletion*Delete one word (backward): Caps+&#39;\n*Delete to the beginning of the line: Caps+[\n*Delete to the end of the line: Caps+&#39;]\n\nSystem: delete line: Cmd+Del; new line: Cmd+Enter\n\nVim\nReferences: https://vim.rtorr.com/\n\nCommonly Used\nDelete one word\nCapslox: Caps+w/r to choose word, then Caps+&#39; to delete the word on the left of the cursor\nVim: w and r to choose word, then daw\n\n\nDelete to the beginning/end\nCapslox: Caps+[/Caps+]\nVim: [/] (mapped to d0/D)\n\n\nCopy a word\nCapslox: Caps+w/r to choose word, then Caps+c to select the word on the left of the cursor, then Cmd+c to copy\nVim: w and r to choose word, then yaw\n\n\n\nGlobal\n:sav[eas] file - save file as\n:ter[minal] - open a terminal window\nExit: Ctrl+w then :q!\n\n\n:set spell spelllang=en_us - turn on English spell\n\nCursor Movement\nh - move cursor left            4h: move cursor 4 character left\nj - move cursor down.        4j: move cursor 4 lines down\nk - move cursor up\nl - move cursor right\nge - jump backwards to the end of a word.     Map w\ne - jump forwards to the end of a word.     *Map to r\n0 - jump to the start of the line.    Use I instead\n$ - jump to the end of the line.     Use A instead\ngg - go to the first line of the document\nG - go to the last line of the document\nCtrl + d - move forward 1/2 a screen.      *Map to h\nCtrl + u - move back 1/2 a screen.        *Map to l\nf: find, fr find next r\nfx - jump to next occurrence of character x (same line)          eg. yfr; dfr\nFx - jump to previous occurrence of character x (same line)\n; - repeat previous f, t, F or T movement\n, - repeat previous f, t, F or T movement, backwards\n\nInsert Mode\ni - insert before the cursor\nI - insert at the beginning of the line\na - insert (append) after the cursor\nA - insert (append) at the end of the line\no - append (open) a new line below the current line\nO - append (open) a new line above the current line\n\nEditing\ncc - change (replace) entire line      eg. caw: delete the word and enter insert mode; c4j\nciw - change (replace) entire word\nu - undo\nU - restore (undo) last changed line\nCtrl + r - redo\n. - repeat last command\n\nMarking Text (Visual Mode)\nv - start visual mode, mark lines, then do a command (like y-yank)\no - move to other end of marked area\naw - mark a word           eg. yaw: copy a word; caw\nab - a block with ()\naB - a block with {}\n\nVisual commands\ny - yank (copy) marked text\nd - delete marked text\n\nCut and paste\nyy - yank (copy) a line            eg. yaw: copy a word; y4k; yfr\n2yy - yank (copy) 2 lines\nyiw - yank (copy) word under the cursor\nyaw - yank (copy) word under the cursor and the space after or before it\ny$ - yank (copy) to end of line\np - put (paste) the clipboard after cursor*\nP - put (paste) before cursor*\ndd - delete (cut) a line          eg. d8j, dfr\n2dd - delete (cut) 2 lines\ndiw - delete (cut) word under the cursor\nD - delete (cut) to the end of the line\nx - delete (cut) character\n\nExiting\n:w - write (save) the file, but don’t exit\n:w !sudo tee % - write out the current file using sudo\n:wq - write (save) and quit\n:q - quit (fails if there are unsaved changes)\n:q! - quit and throw away unsaved changes\n:wqa - write (save) and quit on all tabs\n\nSearch and replace\n/pattern - search for pattern\n?pattern - search backward for pattern\nn - repeat search in same direction\nN - repeat search in opposite direction\n:noh[lsearch] - remove highlighting of search matches\n:%s/old/new/g - replace all old with new throughout file\n:%s/old/new/gc - replace all old with new throughout file with confirmations\n\nTabs\n:tabnew or :tabnew {page.words.file} - open a file in a new tab\ngt or :tabn[ext] - move to the next tab\ngT or :tabp[revious] - move to the previous tab\n#gt - move to tab number #\n:tabm[ove] # - move current tab to the #th position (indexed from 0)\n:tabc[lose] - close the current tab and all its windows\n:tabo[nly] - close all tabs except for the current one\n\nWorking With Multiple Files\n:e[dit] file - edit a file in a new buffer (full screen, the previous file working on still exists under it)\n:bn[ext] - go to the next buffer\n:bp[revious] - go to the previous buffer\n:bd[elete] - delete a buffer (close a file)\n:b[uffer]# - go to a buffer by index #\n:b[uffer] file - go to a buffer by file\n:ls or :buffers - list all open buffers\n:sp[lit] file - open a file in a new buffer and split window\n:vs[plit] file - open a file in a new buffer and vertically split window\n:vert[ical] ba[ll] - edit all buffers as vertical windows\n:tab ba[ll] - edit all buffers as tabs\nCtrl + ws - split window\nCtrl + wv - split window vertically\nCtrl + ww - switch windows\nCtrl + wq - quit a window\nCtrl + wx - exchange current window with next one\nCtrl + w= - make all windows equal height &amp; width\nCtrl + wh - move cursor to the left window (vertical split).   *Map to H\nCtrl + wl - move cursor to the right window (vertical split).   *Map to L\nCtrl + wj - move cursor to the window below (horizontal split).   *Map to J\nCtrl + wk - move cursor to the window above (horizontal split).   *Map to K\nCtrl + wH - make current window full height at far left (leftmost vertical window)\nCtrl + wL - make current window full height at far right (rightmost vertical window)\nCtrl + wJ - make current window full width at the very bottom (bottommost horizontal window)\nCtrl + wK - make current window full width at the very top (topmost horizontal window)\n\nNERDTree\nReferences: https://cheatography.com/stepk/cheat-sheets/vim-nerdtree/\n\nFiles\no: open in prev window (cursor goes in)\ngo: preview (cursor not goes in)\nt: open in new tab\nT: open in new tab silently\ni: open split\ngi: preview split\ns: open vsplit\ngs: preview vsplit\n\nDirectories\no: open &amp; close\nO: recursively open\nx: close parent\nX: close all children recursively\n\n","categories":["Note","Shortcut","Tips","Productivity"],"tags":["Vim","iTerm2","Capslox","Tool","Tips","Workflow","Productivity","Setup"]},{"title":"MySQL Basic","url":"/2021/03/25/MySQL-Basic/","content":"\nNote taken from “freeCodeCamp.org” YouTube video.\nCrouse developed by Mike Dane from mikedane.com.\n\nBasicData Type\nINT\nDECIMAL(a,b)         a: total digits    b: digits after ‘.’\nVARCHAR(N)\nBLOB \nDATE      \nTIMESTAMP\n\nSet Up Table\nImage from “freeCodeCamp.org” YouTube video\nCreate TableCREATE TABLE student (\tstudent_id INT PRIMARY KEY,  name VARCHAR(20),  major VARCHAR(20));\nor\nCREATE TABLE student (\tstudent_id INT,  name VARCHAR(20),  major VARCHAR(20),  PRIMARY KEY(student_id));\nPrint Table DataSELECT * FROM student;\nConstraintsAUTO_INCREMENTDon’t need to specify that argument and give value, it will increase the value automatically\nNOT NULLNeed to be initial\nUNIQUEFor that column, no two rows have the same data\nDEFAULTCREATE TABLE student (  student_id INT AUTO_INCREMENT,  name VARCHAR(20) NOT NULL,  major VARCHAR(20) UNIQUE,  minor VARCHAR(20) DEFAULT &#39;Undeclared&#39; );\nDescribe TableDESCRIBE student;\nDelete TableDROP TABLE student;\nModify TableAdd column:\nALTER TABLE student ADD gpa DECIMAL;\nDelete column:\nALTER TABLE student DROP COLUMN gpa;\nInsertINSERT INTO student VALUES(1, &#39;Jack&#39;, &#39;Biology&#39;);\nIf don’t know some arguments’ value:\nINSERT INTO student(student_id, name) VALUES(1, &#39;Jack&#39;);\nUpdateUPDATE studentSET major &#x3D; &#39;Bio&#39;WHERE major &#x3D; &#39;Biology&#39;;\nOR/AND keyword, Set multipleUPDATE studentSET major &#x3D; &#39;Bio&#39;, minor &#x3D; &#39;undeclared&#39;WHERE major &#x3D; &#39;Biology&#39; OR major &#x3D; &#39;CS&#39;;\nOther comparision options: =, &lt;&gt;, &gt;, &lt;, &gt;=, &lt;=\nUpdate all rowUPDATE studentSET major &#x3D; &#39;Undeclared&#39;\nDeleteDelete all rowsDELETE FROM stduent;\nDelete specified rowsDELETE FROM stduentWHERE student_id &#x3D; 5;\nBasic Queries\nSELECT\n\nSelect allSELECT *FROM student;\nSelect specified columnsSELECT name, majorFROM student;\nor\nSELECT stduent.name, student.majorFROM student;\nSelect by order (column)Ascending by default (ASC)\nSELECT stduent.name, student.majorFROM studentORDER BY name;\nDescending order (DESC):\nSELECT stduent.name, student.majorFROM studentORDER BY name DESC;\nMore order\n\nIf name the same, further order by id\n\nORDER BY name, id \nLIMITOnly get two rows\nSELECT *FROM studentLIMIT 2;\nINSELECT *FROM studentWHERE name IN (&#39;Claire&#39;, &#39;Kate&#39;, &#39;Mike&#39;);\n\n\nAdvance\nImage from “freeCodeCamp.org” YouTube video\nCodeCREATE TABLE employee (  emp_id INT PRIMARY KEY,  first_name VARCHAR(40),  last_name VARCHAR(40),  birth_day DATE,  sex VARCHAR(1),  salary INT,  super_id INT,  branch_id INT);CREATE TABLE branch (  branch_id INT PRIMARY KEY,  branch_name VARCHAR(40),  mgr_id INT,  mgr_start_date DATE,  FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL);ALTER TABLE employeeADD FOREIGN KEY(branch_id)REFERENCES branch(branch_id)ON DELETE SET NULL;ALTER TABLE employeeADD FOREIGN KEY(super_id)REFERENCES employee(emp_id)ON DELETE SET NULL;CREATE TABLE client (  client_id INT PRIMARY KEY,  client_name VARCHAR(40),  branch_id INT,  FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE SET NULL);CREATE TABLE works_with (  emp_id INT,  client_id INT,  total_sales INT,  PRIMARY KEY(emp_id, client_id),  FOREIGN KEY(emp_id) REFERENCES employee(emp_id) ON DELETE CASCADE,  FOREIGN KEY(client_id) REFERENCES client(client_id) ON DELETE CASCADE);CREATE TABLE branch_supplier (  branch_id INT,  supplier_name VARCHAR(40),  supply_type VARCHAR(40),  PRIMARY KEY(branch_id, supplier_name),  FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE);-- ------------------------------------------------------------------------------- CorporateINSERT INTO employee VALUES(100, &#39;David&#39;, &#39;Wallace&#39;, &#39;1967-11-17&#39;, &#39;M&#39;, 250000, NULL, NULL);INSERT INTO branch VALUES(1, &#39;Corporate&#39;, 100, &#39;2006-02-09&#39;);UPDATE employeeSET branch_id &#x3D; 1WHERE emp_id &#x3D; 100;INSERT INTO employee VALUES(101, &#39;Jan&#39;, &#39;Levinson&#39;, &#39;1961-05-11&#39;, &#39;F&#39;, 110000, 100, 1);-- ScrantonINSERT INTO employee VALUES(102, &#39;Michael&#39;, &#39;Scott&#39;, &#39;1964-03-15&#39;, &#39;M&#39;, 75000, 100, NULL);INSERT INTO branch VALUES(2, &#39;Scranton&#39;, 102, &#39;1992-04-06&#39;);UPDATE employeeSET branch_id &#x3D; 2WHERE emp_id &#x3D; 102;INSERT INTO employee VALUES(103, &#39;Angela&#39;, &#39;Martin&#39;, &#39;1971-06-25&#39;, &#39;F&#39;, 63000, 102, 2);INSERT INTO employee VALUES(104, &#39;Kelly&#39;, &#39;Kapoor&#39;, &#39;1980-02-05&#39;, &#39;F&#39;, 55000, 102, 2);INSERT INTO employee VALUES(105, &#39;Stanley&#39;, &#39;Hudson&#39;, &#39;1958-02-19&#39;, &#39;M&#39;, 69000, 102, 2);-- StamfordINSERT INTO employee VALUES(106, &#39;Josh&#39;, &#39;Porter&#39;, &#39;1969-09-05&#39;, &#39;M&#39;, 78000, 100, NULL);INSERT INTO branch VALUES(3, &#39;Stamford&#39;, 106, &#39;1998-02-13&#39;);UPDATE employeeSET branch_id &#x3D; 3WHERE emp_id &#x3D; 106;INSERT INTO employee VALUES(107, &#39;Andy&#39;, &#39;Bernard&#39;, &#39;1973-07-22&#39;, &#39;M&#39;, 65000, 106, 3);INSERT INTO employee VALUES(108, &#39;Jim&#39;, &#39;Halpert&#39;, &#39;1978-10-01&#39;, &#39;M&#39;, 71000, 106, 3);-- BRANCH SUPPLIERINSERT INTO branch_supplier VALUES(2, &#39;Hammer Mill&#39;, &#39;Paper&#39;);INSERT INTO branch_supplier VALUES(2, &#39;Uni-ball&#39;, &#39;Writing Utensils&#39;);INSERT INTO branch_supplier VALUES(3, &#39;Patriot Paper&#39;, &#39;Paper&#39;);INSERT INTO branch_supplier VALUES(2, &#39;J.T. Forms &amp; Labels&#39;, &#39;Custom Forms&#39;);INSERT INTO branch_supplier VALUES(3, &#39;Uni-ball&#39;, &#39;Writing Utensils&#39;);INSERT INTO branch_supplier VALUES(3, &#39;Hammer Mill&#39;, &#39;Paper&#39;);INSERT INTO branch_supplier VALUES(3, &#39;Stamford Lables&#39;, &#39;Custom Forms&#39;);-- CLIENTINSERT INTO client VALUES(400, &#39;Dunmore Highschool&#39;, 2);INSERT INTO client VALUES(401, &#39;Lackawana Country&#39;, 2);INSERT INTO client VALUES(402, &#39;FedEx&#39;, 3);INSERT INTO client VALUES(403, &#39;John Daly Law, LLC&#39;, 3);INSERT INTO client VALUES(404, &#39;Scranton Whitepages&#39;, 2);INSERT INTO client VALUES(405, &#39;Times Newspaper&#39;, 3);INSERT INTO client VALUES(406, &#39;FedEx&#39;, 2);-- WORKS_WITHINSERT INTO works_with VALUES(105, 400, 55000);INSERT INTO works_with VALUES(102, 401, 267000);INSERT INTO works_with VALUES(108, 402, 22500);INSERT INTO works_with VALUES(107, 403, 5000);INSERT INTO works_with VALUES(108, 403, 12000);INSERT INTO works_with VALUES(105, 404, 33000);INSERT INTO works_with VALUES(107, 405, 26000);INSERT INTO works_with VALUES(102, 406, 15000);INSERT INTO works_with VALUES(105, 406, 130000);\nQueriesSelect all employeesSELECT * FROM employee;\nSelect all exployees ordered by salarySELECT *FROM employeeORDER BY salary;\nSelect all exployees ordered by sex then nameSELECT *FROM employeeORDER BY sex, first_name, last_name;\nSelect first 5 exployeesSELECT *FROM employeeLIMIT 5;\nSelect first and last name of all exployeesSELECT first_name, last_nameFROM employee;\nAS keywordName a column differently\nSelect the forename and surnames names of all employeesSELECT first_name AS forename, last_name AS surnameFROM employee;\nDISTINCT keywordSelect all the different gendersSELECT DISTINCT sexFROM employee;\nFunctionCOUNT functionFind the number of employeesSELECT COUNT(emp_id)FROM employee;\nFind the number of female employees born after 1970SELECT COUNT(emp_id)FROM employee;WHERE sex &#x3D; &#39;F&#39; AND birth_date &gt; &#39;1971-01-01&#39;;\nAVG functionAverage of a column\nFind the averge of all employee’s salariesSELECT AVG(salary)FROM employee;\nSUM functionFind the sum of all employee’s salariesSELECT SUM(salary)FROM employee;\nGROUP BY keywordFind out how many males and females there areSELECT COUNT(sex), sexFROM exmployeeGROUP BY sex;\nFind the total sales of each salesmanSELECT SUM(total_sales), emp_idFROM works_withGROUP BY emp_id;\nWildcards% is any number characters\n_ is one character\nLIKE keywordFind any client’s who are an LLCSELECT * FROM clientWHERE client_name LIKE &#39;%LLC&#39;;\nFind any branch suppliers who are in the label businessSELECT *FROM branch_supplierWHERE supplier_name LIKE &#39;% Label%&#39;;\nFind any employee born in OctoberSELECT *FROM employeeWHERE birth_date LIKE &#39;____-10%&#39;;\nFind any clients who are schoolsSELECT *FROM client WHERE client_name LIKE &#39;%school%&#39;;\nUNIONFind a list of employee and branch namesSELECT first_nameFROM employeeUNIONSELECT branch_nameFROM branchUNIONSELECT client_nameFROM client;\nOther uses:\nSELECT first_name AS Compaany_NamesFROM employeeUNIONSELECT branch_nameFROM branch;\nSELECT client_name, branch_idFROM clientUNIONSELECT supplier_name, branch_idFROM branch_supplier;\nor\nSELECT client_name, client.branch_idFROM clientUNIONSELECT supplier_name, branch_supplier.branch_idFROM branch_supplier;\nFind a list of all money spent or earned by the companySELECT salaryFROM employeeUNIONSELECT total_salesFROM works_with;\nJOINCombine rows from two or more tables based on related column\nSELECT employee.emp_id, employee.first_name, branch.branch_nameFROM employeeJOIN branchON employee.emp_id &#x3D; branch.mgr_id;\nLEFT JOIN:\nIncludes all the rows in employee table (result Null for not match)\nRIGHT JOIN:\nincludes all the rows in branch table (result Null for not match)\nFULL JOIN:\nLEFT JOIN + RIGHT JOIN\nNot in MySQL\nNested QueriesUse more SELECT\nFind the names of all employees who have sold over 30,000 to a single clientSELECT employee.first_name, employee.last_nameFROM employeeWHERE employee.emp_id IN (\tSELECT work_with.emp_id  FROM works_with  WHERE works_with.total_sales &gt; 30000);\nFind all clients who are handled by the branch that Michael Scott manages. Assume given Michael’s IDSELECT client.client_nameFROM clientWHERE client.branch_id &#x3D; (\tSELECT branch.branch_id  FROM branch  WHERE branch.mgr_id &#x3D; 102  LIMIT 1);\nIf use =, better limit the result to 1.\nDelete entries when they have foreign keyON DELETEForeign keys set to null\nCREATE TABLE branch (\tbranch_id INT PRIMARY KEY,\tbranch_name VARCHAR(40),  mgr_id INT,  mgr_start_date DATE,  FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL);DELETE FROM emplyeeWHERE emp_id &#x3D; 102;SELECT * FROM branch;\nON DELETE CASCADEDelete the entire row\nCan be used when the deleting key is primary key since primary key cannot be null\nCREATE TABLE branch (\tbranch_id INT,\tsupplier_name VARCHAR(40),  supply_type VARCHAR(40,  PRIMARY KEY(branch_id, supplier_name),  FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE);DELETE FROM branchWHERE branch_id &#x3D; 2;SELECT * FROM branch_supplier;\nTriggerIn command prompt, type\nuse student;DELIMITER $$CREATE\tTRIGGER my_trigger BEFORE INSERT \tON employee\tFOR EACH ROW BEGIN \t\tINSERT INTO trigger_test VALUES(&#39;added new employee&#39;);\tEND$$\tDELIMITER ;\nINSERT INTO employeeVALUES(109, &#39;Oscar&#39;, &#39;Martinez&#39;, &#39;1968-02-19&#39;, &#39;M&#39;, 69000, 106, 3);SELECT * FROM triiger_test;\nNEWRefer to the new row inserting\nDELIMITER $$CREATE\tTRIGGER my_trigger BEFORE INSERT \tON employee\tFOR EACH ROW BEGIN \t\tINSERT INTO trigger_test VALUES(NEW.first_name);\tEND$$\tDELIMITER ;\nIF statementDELIMITER $$CREATE\tTRIGGER my_trigger BEFORE INSERT \tON employee\tFOR EACH ROW BEGIN \t\tIF NEW.sex &#x3D; &#39;M&#39; THEN\t\t\tINSERT INTO trigger_test VALUES(&#39;added male employee&#39;);\t\tELSEIF NEW.set &#x3D; &#39;F&#39; THEN\t\t\tINSERT INTO trigger_test VALUES(&#39;added female employee&#39;);\t\tELSE\t\t\tINSERT INTO trigger_test VALUES(&#39;added other employee&#39;);\t\tEND IF;\tEND$$\tDELIMITER ;\nTrigger for update, delete…TRIGGER my_trigger BEFORE UPDATE …\nTRIGGER my_trigger BEFORE DELETE …\nAFTERTRIGGER my_trigger AFTER UPDATE …\nDROP TRIGGERDROP TIGGER my_trigger;\nER Diagram\nby Mike Dane from mikedane.com\nSchema\nby Mike Dane from mikedane.com\n","categories":["Note","Database","MySQL"],"tags":["MySQL","Database"]},{"title":"VMware Install CentOS 7","url":"/2021/09/18/VMware-Install-CentOS-7/","content":"Download ISO File\nGo to https://www.centos.org/download/\n\nFind the version you want and choose ‘x86_64’\n\nDownload the ISO file\n\n\n\nNote: ‘minimal’ does not have GUI\nVMware\n\n\n\n\n\n\"CentOS_7_64_template\" will be the file name save in your host machine.\n\n\n\n\nChoose the cores number, memory, and disk space you want your VM to have.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive user permission to root\nsu root\nvim /etc/sudoers\nFind and edit\n\nroot\tALL=(ALL)\tALL%wheel ALL=(ALL) ALLsungwa ALL=(ALL) NOPASSWD:ALL  # Add this line\n","categories":["Note","Tools"],"tags":["VM"]},{"title":"Writing Note Workflow","url":"/2021/09/18/Writing-Note-Workflow/","content":"ToolSnipaste\nScreenshot app\n\n\n\nTurn on Auto Save, then pressing F1 and then pressing Enter will automatically save your screenshot to that folder. \nMore about SnipasteF1 and Enter to screenshot then F3.It can pin the screenshot on top of other application. Very useful when copying something from another screen.\nF1 then use cmd+1 to cmd+7 to choose tools to edit the screenshotWorkflow\nOutline the article main contents.\n\nOperating while taking screenshot.\n\nGo the Hexo directory, use command hexo new &quot;article title&quot; to create a markdown file (new post).\n\nAfter finishing, select all and drag all screenshots to the markdown file.\n\nAdd more detailed instructions and explanations.\n\nUse Ctrl+F to replace the image path from /Users/....../Snipaste_2021-09-18_17-21-53.pngto Snipaste_2021-09-18_17-21-53.png (get rid of the absolute path pre-fix, otherwise Hexo can’t find the image path). \n\nDeploy post with hexo clean &amp;&amp; hexo d -g\n\n\n","categories":["Tips"],"tags":["Tool","Tips","Workflow"]},{"title":"Installing Docker on Raspberry Pi 4","url":"/2021/09/23/Installing-Docker-on-Raspberry-Pi-4/","content":"Device Information\nHardware: Raspberry Pi 4\nSoftware: Raspberry Pi OS Lite 5.10 May 7th 2021\n\nInstallation$ sudo apt-get update$ sudo apt-get install docker-ce$ curl -fsSL get.docker.com -o get-docker.sh$ sudo sh get-docker.sh\nStart Docker$ sudo systemctl enable docker$ sudo systemctl start docker\nCreate Docker User Group\nBecause Docker only allows root user and docker group’s user to access.\n\n$ sudo groupadd docker$ sudo usermod -aG docker pi # Can replace &quot;pi&quot; to any other users\nTest$ docker run --rm hello-world\nReferenceshttps://yeasy.gitbook.io/docker_practice/install/raspberry-pi\n","categories":["Setup","Raspberry"],"tags":["Setup","Raspberry","Docker"]},{"title":"Vim Initialization Setup","url":"/2021/09/26/Vim-Initialization-Setup/","content":"How It Looks Like\nInstallation\nNotes: \n\nSome plugins might need have nodejs installed.\ncurl -sL install-node.now.sh/lts | bash\nMight need to install the powerline font for the statusline plugin. \nIf use theme Nord for Vim, the terminal color theme should also be Nord. \n\n\n\nInstall Vim-Plug.\n\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\nhttps://github.com/junegunn/vim-plug\n\n\nPut the .vimrc (my config) in the ~ directory. \nVim into .vimrc and run :PlugInstall. \n\n","categories":["Setup"],"tags":["Vim","Setup"]},{"title":"Deploy Docker Images to EC2 (With Data Persistance)","url":"/2021/10/12/Deploy-Docker-Images-to-EC2/","content":"Overall Procedures\nAssume already setup AWS Cli\n\n\nBuild image to AWS ECR.\nCreate Task Definitions in ECS that bind to images.\nCreate Cluster with service that uses the task definition.\nAccess to EC2 instance.\n\nBuild Image to AWS ECR\nSearch ECR in AWS services.\nCreate a repository.\nGo inside the repository.\nClick View push command on the top right. (Need to set up AWS Cli).\n\nCreate Task Definitions\nDockerfile EXPOSE &lt;PORT&gt; if not use default.\n\nCreate task definition under ECS clusters.\n\n\nIf no mention, leave as default\n\n\nNetwork mode default.\n\nRequires compatibilities EC2.\n\nTask size: must be (much) less than cluster EC2 instance size since the install itself also uses some memories (can just set this and don’t need to set the memory size under container definition).\n\nContainer definition: memory (hard/soft) must be less than or equal to the task size, cpu/gpu leave blank (for EC2, can just specify this and not specify the task size but the container memory (hard/sorft) should also much less than the cluster instance memory). Under the Storage and Logging, check the “Log configuration” in order to see the log later in CloudWatch -&gt; Logs Group/Insight.\n\nPort mapping: host (EC2 instance) to container.\n\nAttach volume, choose volume type as “Docker”, choose “shared” scope  (so that it can be persistence) then check “Enable auto-provisioning”. With this, need to set the “Mount Point” inside the “Container Definition”. An example: \n\n\n\n\n\n   \nCreating Cluster\nCluster template: EC2 Linux + Networking.\n\nChoose instance type, choose number of instances (be careful not to choose the ARM architecture). \n\nCreate a key pair (can be found under Network &amp; Security on the left menu in EC2 service). \n\nTo ssh to EC2 instance, needed to give a key pair when creating the cluster. If lost, may need to recreate the cluster (couldn’t change the key).https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.htmlIf you’ve lost your existing private key or you launched your instance without a key pair, you won’t be able connect to your instance and therefore won’t be able to add or replace a key pair.\n\n\nNetworking: VPC chooses the one has (172.,,,,), then subnet choose the first one. \n\nCreate a security group (search security group in the search bar) and open ports, then choose that security group while creating the cluster.\n\nI set to open all ports for testing (Convenience).\n\n\n\nRun ECR Container on ClusterService is the long-run of task definition. When a task down, service will start that task again to ensure the service always running. For running a docker image on ECS, a task (definition) needs to be created. You can just run a task from the task definition but if it’s down, it’s down (won’t restart itself). With service, a task (definition) is bound to a service. When a cluster specified a service, it will ensure the service always running, ie. the task in the service is always running (will restart if it goes down).\nCreate service.\nLaunch type EC2.\nChoose task definition.\nChoose cluster.\nService name.\nService type: Daemon (run one copy).\nOther leave as default.\n\nAccess EC2 InstanceNote: The public IP is found under the ec2 instance (search ec2 in the search bar, click on instance id, then the public IPV4 is the address), not the task ip address in the cluster page\n\nSearch EC2.\nGo to Instance under instances.\nChoose the instance and click “Connect”. \nUse SSH Client to connect. \n\nTo access container (task), use docker command in EC2. Same as using docker on your local machine.\n","categories":["Note","Docker","AWS"],"tags":["Docker","AWS","Deployment"]},{"title":"AWS CLI Setup And the Use of ECR","url":"/2021/10/13/AWS-CLI-Setup-And-the-Use-of-ECR/","content":"\nElastic Container Registry (ECR) can be used to stored images (eg. docker images), and deployed to AWS ECS or EKS).\n\nInstall AWS CLI\nhttps://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html.\nVerify which aws.\n\nGet Access Key From AWS\nCreate policy (with ECR permission).\n\nCreate user, access type choose access key, then attach the policy.\n\nDownload the cvs file that has access key ID and secret access key.\n\n\nConfig AWS CLI.aws configure\nEnter the information.\nPush Image to ECR\nGo to AWS ECR.\nCreate repository.\nChoose the repository and click on the “View push command” button. \nCopy the first command, should be prompted “Login Succeeded”.\nRun the second command (docker build …) in the directory that has the Dockerfile. \n\n","categories":["Note","AWS"],"tags":["AWS","ECR"]},{"title":"Docker Basic Use and Command","url":"/2021/10/13/Docker-Basic-Use-and-Command/","content":"\nReference: https://www.youtube.com/watch?v=3c-iBn73dDE\n\nPull Imagesdocker pull image_name:image_tag\nView Imagesdocker imagesdocker image ls\nRun Imagesdocker run -d -p 8080:8081 --net my_network --name container_name image_name \n\nIf image not exists, will pull from repository.\n-d: detached (not occupied terminal)\n-p host_port:container_port\n\nView Containersdocker ps [-a]          # -a show hidden\nStart/Stop Containersdocker start container_iddocker stop container_id\nDebugOpen Container Command Linedocker exec -it container_id /bin/bash\nPrint Container Logsdocker logs container_id\nNetworkdocker network ls\ndocker create network my_network\nDelete Images/Containerdocker image rm [OPTIONS] IMAGE [IMAGE...]\ndocker rm [OPTIONS] CONTAINER [CONTAINER...]\nDocker Compose\nRun images together as a group. Don’t need to retype configuration, etc. \n\ndocker-compose -f docker-compose.yaml updocker-compose -f docker-compose.yaml down\ndocker-compose.yaml Exampleversion: &#x27;3&#x27;services:  my-app:    image: 67832...r.ecr.us-east-2.amazonaws.com/my-app:latest    ports:    - 3000:3000  mongodb:    image: mongo:4.2.1    ports:      - 27017:27017    environment:      - MONGO_INITDB_ROOT_USERNAME=admin      - MONGO_INITDB_ROOT_PASSWORD=password    volumes:      - mongo-data:/data/db  mongo-express:    image: mongo-express:0.54    ports:      - 8080:8081    environment:      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin      - ME_CONFIG_MONGODB_ADMINPASSWORD=password      - ME_CONFIG_MONGODB_SERVER=mongodbvolumes:  mongo-data:    driver: local\nBuild Image\nBuild the image to push into the remote repository, ie. push to ECR and then deploy to ECS.\n\ndocker build -t my-app:1.0 .\nDockerfile ExampleFROM node:13-alpineENV MONGO_DB_USERNAME=admin \\    MONGO_DB_PWD=passwordRUN mkdir -p /home/appCOPY ./app /home/appWORKDIR /home/appRUN npm installCMD [&quot;node&quot;, &quot;server.js&quot;]EXPOSE 8000\nDocker VolumesNote: Container restart all data will lose. Use Volumes to store data permanently.\nCreate VolumeCreate volume while starting a container\ndocker run -v volume_name:/container/path image_name \nThe above is the named volumes type.\nTypes of VolumesBind mount: mount host and container, data change both sides -v /host/path:/container/path\nAnonymous volumes: -v /container/path\nNamed volumes (should use this one): give the volume a name then other container can refer to and shared and used data later.\nOther Commandsdocker volume lsdocker volume create volume_namedocker volume rm volume_name\nNote\nVolumes may not work for some path. For example, for MongoDB, work for /data/db but /data (might be some permission problems). Should refer to the doc or see the Dockerfile comes with the image from docker hub (image layers: VOLUME […]). \n\n\n\nEven though used named volume, docker may still create some extra anonymous volumes for other uses.\n\n","categories":["Note","Docker"],"tags":["Docker"]},{"title":"Import Data to MySQL on Docker","url":"/2021/10/13/Import-Data-to-MySQL-on-Docker/","content":"\nPull and start a MySQL install\n\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag# Example:# docker run --name my-mysql -e MYSQL_ROOT_PASSWORD=000000 -d -p 3306:3306 mysql:5.7\n\nsome-mysql is the name you want to assign to your container.\nmy-secret-pw is the password to be set for the MySQL root user.\ntag is the tag specifying the MySQL version you want.\n-p host_port:container_port.\n\n\nNow can also use client to connect the data base via port 3306\n\n\nImport local (host) .sql file to the container\n\ndocker cp /opt/a.sql my-mysql:/tmp/\n\nLog in to Docker MySQL\n\ndocker exec -it my-mysql mysql -uroot -p000000\n\nShould see mysql&gt;     \n\n\nCreate database\n\nCREATE DATABASE my_database;\n\nSelect database\n\nUSE my_database;\n\nExecute sql file\n\nsource /tmp/a.sql\n","categories":["Note","Docker","MySQL"],"tags":["MySQL","Docker"]},{"title":"Hello World","url":"/2021/01/16/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server$ hexo server\nMore info: Server\nGenerate static files$ hexo generate\nMore info: Generating\nDeploy to remote sites$ hexo deploy\nMore info: Deployment\n"}]